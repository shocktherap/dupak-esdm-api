{"version":3,"sources":["../../../api/server/controllers/FunctionalPositionController.js"],"names":["util","Util","FunctionalPositionController","req","res","FunctionalPositionService","getAllFunctionalPositions","allFunctionalPositions","length","setSuccess","send","setError","body","name","first_semester_lock","second_semester_lock","newFunctionalPosition","addFunctionalPosition","createdFunctionalPosition","message","alteredFunctionalPosition","id","params","Number","updateFunctionalPosition","getAFunctionalPosition","theFunctionalPosition","deleteFunctionalPosition","FunctionalPositionToDelete"],"mappings":"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","sourcesContent":["import FunctionalPositionService from '../services/FunctionalPositionService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\n\nclass FunctionalPositionController {\n  static async getAllFunctionalPositions(req, res) {\n    try {\n      const allFunctionalPositions = await FunctionalPositionService.getAllFunctionalPositions();\n      if (allFunctionalPositions.length > 0) {\n        util.setSuccess(200, 'FunctionalPositions retrieved', allFunctionalPositions);\n      } else {\n        util.setSuccess(200, 'No FunctionalPosition found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addFunctionalPosition(req, res) {\n    if (!req.body.name || !req.body.first_semester_lock || !req.body.second_semester_lock) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    const newFunctionalPosition = req.body;\n    try {\n      const createdFunctionalPosition = await FunctionalPositionService.addFunctionalPosition(newFunctionalPosition);\n      util.setSuccess(201, 'FunctionalPosition Added!', createdFunctionalPosition);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatedFunctionalPosition(req, res) {\n    const alteredFunctionalPosition = req.body;\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updateFunctionalPosition = await FunctionalPositionService.updateFunctionalPosition(id, alteredFunctionalPosition);\n      if (!updateFunctionalPosition) {\n        util.setError(404, `Cannot find FunctionalPosition with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'FunctionalPosition updated', updateFunctionalPosition);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAFunctionalPosition(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const theFunctionalPosition = await FunctionalPositionService.getAFunctionalPosition(id);\n\n      if (!theFunctionalPosition) {\n        util.setError(404, `Cannot find FunctionalPosition with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found FunctionalPosition', theFunctionalPosition);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async deleteFunctionalPosition(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const FunctionalPositionToDelete = await FunctionalPositionService.deleteFunctionalPosition(id);\n\n      if (FunctionalPositionToDelete) {\n        util.setSuccess(200, 'FunctionalPosition deleted', {id: id});\n      } else {\n        util.setError(404, `FunctionalPosition with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default FunctionalPositionController;"],"file":"FunctionalPositionController.js"}