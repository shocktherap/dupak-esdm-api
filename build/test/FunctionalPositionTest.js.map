{"version":3,"sources":["../../api/test/FunctionalPositionTest.js"],"names":["chai","use","chatHttp","expect","describe","it","done","functional_position","name","first_semester_lock","second_semester_lock","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","id","get","should","have","property","functional_positionId","eql","updatedfunctional_position","put"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chatHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../index';\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\ndescribe('Testing the functional_position endpoints:', () => {\n  it('It should create a functional_position', (done) => {\n    const functional_position = {\n      name: 'First Awesome functional_position',\n      first_semester_lock: '2020-01-01',\n      second_semester_lock: '2020-06-01'\n    };\n    chai.request(app)\n      .post('/api/v1/functional_positions')\n      .set('Accept', 'application/json')\n      .send(functional_position)\n      .end((err, res) => {\n        expect(res.status).to.equal(201);\n        expect(res.body.data).to.include({\n          id: 1,\n          name: functional_position.name,\n          first_semester_lock: functional_position.first_semester_lock,\n          second_semester_lock: functional_position.second_semester_lock\n        });\n        done();\n      });\n  });\n\n  it('It should not create a functional_position with incomplete parameters', (done) => {\n    const functional_position = {\n      first_semester_lock: '$9.99',\n      second_semester_lock: 'This is the awesome functional_position'\n    };\n    chai.request(app)\n      .post('/api/v1/functional_positions')\n      .set('Accept', 'application/json')\n      .send(functional_position)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        done();\n      });\n  });\n\n  it('It should get all functional_positions', (done) => {\n    chai.request(app)\n      .get('/api/v1/functional_positions')\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data[0].should.have.property('id');\n        res.body.data[0].should.have.property('name');\n        res.body.data[0].should.have.property('first_semester_lock');\n        res.body.data[0].should.have.property('second_semester_lock');\n        done();\n      });\n  });\n\n  it('It should get a particular functional_position', (done) => {\n    const functional_positionId = 1;\n    chai.request(app)\n      .get(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data.should.have.property('id');\n        res.body.data.should.have.property('name');\n        res.body.data.should.have.property('first_semester_lock');\n        res.body.data.should.have.property('second_semester_lock');\n        done();\n      });\n  });\n\n  it('It should not get a particular functional_position with invalid id', (done) => {\n    const functional_positionId = 8888;\n    chai.request(app)\n      .get(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Cannot find FunctionalPosition with the id ${functional_positionId}`);\n        done();\n      });\n  });\n\n  it('It should not get a particular functional_position with non-numeric id', (done) => {\n    const functional_positionId = 'aaa';\n    chai.request(app)\n      .get(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                            .eql('Please input a valid numeric value');\n        done();\n      });\n  });\n\n  it('It should update a functional_position', (done) => {\n    const functional_positionId = 1;\n    const updatedfunctional_position = {\n      id: functional_positionId,\n      name: 'Updated Awesome functional_position',\n      first_semester_lock: '2020-01-01',\n      second_semester_lock: '2020-06-01'\n    };\n    chai.request(app)\n      .put(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .send(updatedfunctional_position)\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data.id).equal(updatedfunctional_position.id);\n        expect(res.body.data.name).equal(updatedfunctional_position.name);\n        expect(res.body.data.first_semester_lock).equal(updatedfunctional_position.first_semester_lock);\n        expect(res.body.data.second_semester_lock).equal(updatedfunctional_position.second_semester_lock);\n        done();\n      });\n  });\n\n  it('It should not update a functional_position with invalid id', (done) => {\n    const functional_positionId = '9999';\n    const updatedfunctional_position = {\n      id: functional_positionId,\n      name: 'Updated Awesome functional_position again',\n      first_semester_lock: '2020-01-01',\n      second_semester_lock: '2020-06-01'\n    };\n    chai.request(app)\n      .put(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .send(updatedfunctional_position)\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Cannot find FunctionalPosition with the id: ${functional_positionId}`);\n        done();\n      });\n  });\n\n  it('It should not update a functional_position with non-numeric id value', (done) => {\n    const functional_positionId = 'ggg';\n    const updatedfunctional_position = {\n      id: functional_positionId,\n      name: 'Updated Awesome functional_position again',\n      first_semester_lock: '2020-01-01',\n      second_semester_lock: '2020-06-01'\n    };\n    chai.request(app)\n      .put(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .send(updatedfunctional_position)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                            .eql('Please input a valid numeric value');\n        done();\n      });\n  });\n\n\n  it('It should delete a functional_position', (done) => {\n    const functional_positionId = 1;\n    chai.request(app)\n      .delete(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data).to.include({});\n        done();\n      });\n  });\n\n  it('It should not delete a functional_position with invalid id', (done) => {\n    const functional_positionId = 777;\n    chai.request(app)\n      .delete(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`FunctionalPosition with the id ${functional_positionId} cannot be found`);\n        done();\n      });\n  });\n\n  it('It should not delete a functional_position with non-numeric id', (done) => {\n    const functional_positionId = 'bbb';\n    chai.request(app)\n      .delete(`/api/v1/functional_positions/${functional_positionId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message').eql('Please provide a numeric value');\n        done();\n      });\n  });\n});"],"file":"FunctionalPositionTest.js"}